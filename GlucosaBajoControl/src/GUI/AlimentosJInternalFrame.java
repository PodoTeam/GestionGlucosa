/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import glucosabajocontrol.AlimentoDP;
import glucosabajocontrol.PacienteDP;
import glucosabajocontrol.RecoAlimenticiaDP;
import java.io.IOException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.util.Date;
import javax.swing.JOptionPane;


/**
 *
 * @author W10USER
 */
public class AlimentosJInternalFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form AlimentosJInternalFrame
     */
    static String user;
    ArrayList<AlimentoDP> resultado;
    public AlimentosJInternalFrame(String user) throws IOException, SQLException {
        initComponents();
        this.user = user;
        // primer paso 
        // Obtener peso, edad, estatura del paciente
       llenar();
      
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 102, 153));
        setClosable(true);
        setIconifiable(true);
        setTitle("Recomendacion de alimentos");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Alimento", "Grasa en gramos", "Azucar en gramos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    
    private ArrayList<AlimentoDP> ubicacion(int edad, double estatura, double peso) throws IOException, SQLException {
        ArrayList<AlimentoDP> resultado = new ArrayList<>();
        double ims = 0.0, estatura_metros = 0.0;
        estatura_metros = estatura * 0.01;
        ims = peso / Math.pow(estatura_metros, 2);
        //Ims indice de masa corpoal
        AlimentoDP ali = new AlimentoDP();
        resultado = ali.getAlimentos(peso, ims);
        return  resultado;
         
    }

    private void llenar() throws IOException, SQLException {
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        PacienteDP pa = new PacienteDP(user);
        pa = pa.consultarPaciente();
        int edad = pa.getEdad();
        double estatura = pa.getAltura();
        double peso = pa.getPeso();
        Object datos[] = new Object[3];
        // Obtener ubicacion
        resultado = ubicacion(edad,estatura,peso);
        Date fecha = new Date();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");

        String formattedDate = simpleDateFormat.format(fecha);

        java.sql.Date date1 = java.sql.Date.valueOf(formattedDate);
        System.out.println(date1);
        for (int i = 0; i < resultado.size(); i++) {
            datos[0] = resultado.get(i).getNombreAlimento();
            datos[1] = resultado.get(i).getGrasaAlimento();
            datos[2] =resultado.get(i).getAzucarAlimento();
            if(!registrarRecomendacion(user,resultado.get(i).getNombreAlimento()
            ,date1))
            {
                JOptionPane.showMessageDialog(null, "Fallo en registrar la recomendacion alimenticia");
            }
            
            modelo.addRow(datos);
        }
        jTable1.setModel(modelo);
         
    }

    private boolean registrarRecomendacion(String user,String Nombre,Date fecha ) throws IOException, SQLException {
        boolean var;
        RecoAlimenticiaDP reco = new RecoAlimenticiaDP(user,Nombre, (java.sql.Date) fecha);
        var = reco.Guardar();
        return  var;
    }
 
           
                
    
}
